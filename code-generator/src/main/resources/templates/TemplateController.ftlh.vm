package ${package.Controller};

##自动生成代码模板
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import java.util.List;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;

import ${package.Service}.${table.serviceName};
import ${package.Entity}.${entity};

import org.springframework.web.bind.annotation.RequestMapping;
#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@Api(tags = "${table.comment}接口")
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
    #if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

    @Autowired private ${table.serviceName} ${table.entityPath}Service;

    @ApiOperation("分页")
    @GetMapping("/page")
    public R<Page<${entity}>> findPage(@RequestParam Integer pageNum,
                                    @RequestParam Integer pageSize) {
        QueryWrapper<${entity}> queryWrapper = new QueryWrapper<>();
        queryWrapper.orderByDesc("id");
        return R.success(${table.entityPath}Service.page(new Page<>(pageNum, pageSize), queryWrapper));
    }

    @ApiOperation("保存")
    @PostMapping("/save")
    public R save(@RequestBody ${entity} ${table.entityPath}) {
        return R.success(${table.entityPath}Service.saveOrUpdate(${table.entityPath}));
    }

    @ApiOperation("删除")
    @DeleteMapping("/{id}")
    public R delete(@PathVariable Integer id) {
        return R.success(${table.entityPath}Service.removeById(id));
    }

    @ApiOperation("列表")
    @GetMapping("/findAll")
    public R<List<${entity}>> findAll() {
        return R.success(${table.entityPath}Service.list());
    }

    @ApiOperation("获取")
    @GetMapping("/{id}")
    public R<${entity}> findOne(@PathVariable Integer id) {
        return R.success(${table.entityPath}Service.getById(id));
    }

}

#end